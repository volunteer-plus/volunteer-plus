services:
  frontend:
    build: ./frontend
    ports:
      - ${FRONTEND_PORT}:${FRONTEND_PORT}
    volumes:
      - ./frontend/src:/usr/src/app/src
      - ./frontend/public:/usr/src/app/public
      - ./frontend/index.html:/usr/src/app/index.html
    environment:
      - FRONTEND_PORT=${FRONTEND_PORT}
      - VITE_VOLUNTEER_PLUS_API_BASE_URL=${VOLUNTEER_PLUS_API_BASE_URL}
    container_name: volunteer-plus-frontend

  db_main:
    image: mariadb:11.0
    container_name: db_main
    environment:
      MARIADB_USER: ${MAIN_DB_USER}
      MARIADB_ROOT_PASSWORD: ${MAIN_DB_PASSWORD}
      MARIADB_DATABASE: ${MAIN_DB_NAME}
    ports:
      - ${MAIN_DB_PORT}:${MAIN_DB_PORT}

  redis:
    image: redislabs/redismod
    container_name: redislabs_container
    restart: always
    ports:
      - ${REDIS_PORT}:${REDIS_PORT}

  redis-insight:
    image: redis/redisinsight:latest
    container_name: redis_insight_container
    restart: always
    ports:
      - ${REDIS_INSIGHT_PORT}:${REDIS_INSIGHT_PORT}
    volumes:
      - redisinsight_db:/db

  ollama:
    image: ollama/ollama:latest
    ports:
      - ${OLLAMA_PORT}:${OLLAMA_PORT}
    volumes:
      - ollama-local:/root

  otel-collector:
    container_name: otel-collector
    image: otel/opentelemetry-collector-contrib:latest
    restart: always
    command:
      - --config=/etc/otelcol-contrib/otel-collector.yml
    volumes:
      - ./dev-resources/collector/otel-collector.yml:/etc/otelcol-contrib/otel-collector.yml
    ports:
      - "1888:1888" # pprof extension
      - "8888:8888" # Prometheus metrics exposed by the collector
      - "8889:8889" # Prometheus exporter metrics
      - "13133:13133" # health_check extension
      - "4317:4317" # OTLP gRPC receiver
      - "4318:4318" # OTLP http receiver
      - "55679:55679" # zpages extension
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:13133"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 15s
    depends_on:
      jaeger:
        condition: service_healthy
    networks:
      - otel-network

  jaeger:
    container_name: jaeger
    image: jaegertracing/all-in-one:latest
    restart: always
    environment:
      - COLLECTOR_OTLP_ENABLED=true
    ports:
      - "5775:5775/udp"
      - "6831:6831/udp"
      - "6832:6832/udp"
      - "5778:5778"
      - "16686:16686"
      - "14268:14268"
      - "14250:14250"
      - "9411:9411"
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:16686"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - otel-network

  backend:
    build:
      context: ./backend/
      dockerfile: Dockerfile
    container_name: backend
    ports:
      - ${BACKEND_PORT}:${BACKEND_PORT}
    depends_on:
      - db_main
      - redis
      - redis-insight
      - ollama
      - jaeger
      - otel-collector
    environment:
      DB_HOST: db_main
      DB_PORT: ${MAIN_DB_PORT}
      DB_NAME: ${MAIN_DB_NAME}
      DB_USER: ${MAIN_DB_USER}
      DB_PASSWORD: ${MAIN_DB_PASSWORD}
      AWS_ACCESS_KEY: ${MAIN_AWS_ACCESS_KEY}
      AWS_SECRET_KEY: ${MAIN_AWS_SECRET_KEY}
      AWS_SERVICE_REPORT_BUCKET_NAME: ${MAIN_AWS_SERVICE_REPORT_BUCKET_NAME}
      MAIL_SYSTEM_EMAIL: ${MAIL_SYSTEM_EMAIL}
      MAIL_SYSTEM_NAME: ${MAIL_SYSTEM_NAME}
      MAIL_HOST: ${MAIL_HOST}
      MAIL_PORT: ${MAIL_PORT}
      MAIL_USERNAME: ${MAIL_USERNAME}
      MAIL_PASSWORD: ${MAIL_PASSWORD}
      LIQPAY_PUBLIC_KEY:  ${LIQPAY_PUBLIC_KEY}
      LIQPAY_PRIVATE_KEY: ${LIQPAY_PRIVATE_KEY}
      SPRING_AI_OPENAI_API_KEY: ${SPRING_AI_OPENAI_API_KEY}
      REDIS_HOST: redis
      REDIS_PORT: ${REDIS_PORT}
      OLLAMA_HOST: ollama
      OLLAMA_PORT: ${OLLAMA_PORT}
      JAEGER_HOST: jaeger
      JAEGER_PORT: ${JAEGER_PORT}
      OTEL_COLLECTOR_HOST: otel-collector
      OTEL_COLLECTOR_PORT: ${OTEL_COLLECTOR_PORT}

volumes:
  ollama-local:
  redisinsight_db:
  otel-network:
    driver: bridge
