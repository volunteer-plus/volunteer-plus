spring.application.name=backend

spring.datasource.driver-class-name=org.mariadb.jdbc.Driver
spring.datasource.url=jdbc:mariadb://${DB_HOST}:${DB_PORT}/${DB_NAME}
spring.datasource.username=${DB_USER}
spring.datasource.password=${DB_PASSWORD}

spring.flyway.enabled=true
spring.thymeleaf.check-template-location=false

# for testing purpose only in order not to garbage prod logs,
# spring.jpa.show-sql=true
# logging.level.org.hibernate.sql=trace

spring.servlet.multipart.max-file-size=1000MB
spring.servlet.multipart.max-request-size=1000MB

# swagger configs
# Link: http://HOST:PORT/swagger-ui/index.html
# For local: http://localhost:8080/swagger-ui/index.html
springdoc.api-docs.path=/api-docs
springdoc.swagger-ui.path=/swagger-ui-custom.html
springdoc.swagger-ui.operationsSorter=method
management.endpoints.web.exposure.include=*
management.tracing.sampling.probability=1.0
management.endpoint.health.probes.enabled=true
management.observations.annotations.enabled=true
management.otlp.tracing.endpoint=${TRACING_ENDPOINT}

# AWS S3
aws.access.key=${AWS_ACCESS_KEY}
aws.secret.key=${AWS_SECRET_KEY}
aws-s3.report-bucket-name=${AWS_SERVICE_REPORT_BUCKET_NAME}

# Quartz configs
# 0 0/1 * ? * * --- cron run email notifications every 1 minutes
spring.quartz.job-store-type=jdbc
# in order to keep records in db after restart use 'never' value here
# in order to initialize schema on first run please switch it to 'always'
spring.quartz.jdbc.initialize-schema=never
spring.quartz.properties.org.quartz.jobStore.class=org.quartz.impl.jdbcjobstore.JobStoreTX
spring.quartz.properties.org.quartz.jobStore.driverDelegateClass=org.quartz.impl.jdbcjobstore.StdJDBCDelegate
spring.quartz.properties.org.quartz.threadPool.threadNamePrefix=scheduler-worker
spring.quartz.properties.org.quartz.threadPool.threadCount=25

email.system=${MAIL_SYSTEM_EMAIL}
email.system.name=${MAIL_SYSTEM_NAME}
email.send.enable=true

# Gmail SMTP server configuration
spring.mail.host=${MAIL_HOST}
spring.mail.port=${MAIL_PORT}
spring.mail.username=${MAIL_USERNAME}
spring.mail.password=${MAIL_PASSWORD}
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true

spring.flyway.placeholder-replacement=false

LIQPAY_PUBLIC_KEY=${LIQPAY_PUBLIC_KEY}
LIQPAY_PRIVATE_KEY=${LIQPAY_PRIVATE_KEY}

# Open AI configs
spring.ai.openai.api-key=${SPRING_AI_OPENAI_API_KEY}
spring.ai.openai.moderation.api-key=${SPRING_AI_OPENAI_API_KEY}
spring.ai.openai.moderation.options.model=gpt-4o-mini
spring.ai.openai.chat.options.model=gpt-4o-mini
spring.ai.openai.image.options.response-format=image/.png

# Ollama AI configs
spring.ai.ollama.base-url=http://${OLLAMA_HOST}:${OLLAMA_PORT}
spring.ai.ollama.chat.enabled=true
spring.ai.ollama.embedding.enabled=true
spring.ai.ollama.embedding.options.model=mxbai-embed-large:latest
spring.ai.ollama.init.pull-model-strategy=never
spring.ai.ollama.init.timeout=5m
spring.ai.ollama.init.max-retries=1

# Open AI dev purposes only configs
spring.ai.chat.observations.include-prompt=true
spring.ai.chat.observations.include-completion=true
spring.ai.chat.observations.include-error-logging=true
spring.ai.chat.client.observations.include-input=true
spring.ai.image.observations.include-prompt=true
spring.ai.vectorstore.observations.include-query-response=true

spring.ai.mcp.server.name=volunteer-plus-mcp-server
spring.ai.mcp.server.version=1.0.0

# AI pdf document reader exceptions suppression
logging.level.org.apache.pdfbox.pdmodel.font.FileSystemFontProvider=ERROR

spring.ai.allow.prompt.pre-upload=false
ai.chat.history.window.size=100

# System Async executor configurations
system.executor.core-size=5
system.executor.pool-size=10
system.executor.queue-capacity=100

# Add virtual threads support
spring.threads.virtual.enabled=true

# Caffeine config
spring.caffeine.ttl.brigade-codes=60
spring.caffeine.ttl.brigades=30

# Redis configuration
spring.redis.disabled=true
spring.data.redis.host=${REDIS_HOST}
spring.data.redis.port=${REDIS_PORT}
spring.cache.redis.cache-null-values=true
spring.cache.redis.broker-codes-ttl=60
spring.cache.redis.brigades-ttl=30

# WebSocket related configurations
websocket.skip.auth=true

# Add Redis vector store support
spring.ai.vector-store.redis.open-ai.index=redis-open-ai-index
spring.ai.vector-store.redis.open-ai.prefix=redis-open-ai-prefix
spring.ai.vector-store.redis.ollama.index=redis-ollama-index
spring.ai.vector-store.redis.ollama.prefix=redis-ollama-prefix
spring.ai.vector-store.redis.initialize-schema=true
